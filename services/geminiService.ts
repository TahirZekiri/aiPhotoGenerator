import { GoogleGenAI, Modality, GenerateContentResponse } from "@google/genai";
import { ImageFile } from '../types';

if (!process.env.API_KEY) {
    throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

const fileToGenerativePart = (image: ImageFile) => {
  return {
    inlineData: {
      data: image.base64,
      mimeType: image.mimeType,
    },
  };
};

export const generateStyledImage = async (
  referenceImage: ImageFile,
  productImage: ImageFile,
  productTitle: string,
  price: string,
  oldPrice?: string
): Promise<ImageFile> => {
    const prompt = `
    You are an expert AI graphic designer creating a promotional image. Your most important task is to render text exactly as provided.

    **Text Rendering Rules (NON-NEGOTIABLE):**
    - Your primary goal is 100% accuracy in text rendering. Any error is a failure.
    - You MUST render the following Product Title with perfect, character-for-character accuracy: "${productTitle}"
    - Every single character, especially Cyrillic or other non-Latin characters, must be drawn perfectly. There are no acceptable substitutions. For example, if a character is "ц", it must be "ц", not "u" or anything else.

    **Task:** Create a new promotional image.

    **Inputs:**
    1. **Reference Image:** The first image is for style and layout inspiration ONLY. Do NOT copy its background, logo, or the product shown. Analyze its aesthetic, color palette, typography style, and element placement.
    2. **Product Image:** The second image contains the product that MUST be featured. Cleanly extract the product.
    3. **Product Details:**
        - Title: "${productTitle}"
        - Price: "${price}"
        - Old Price: "${oldPrice || 'N/A'}" (show this as a strikethrough price if present and not 'N/A')

    **Design Instructions:**
    - Generate a new, visually appealing image featuring the product from the Product Image.
    - The overall style (e.g., minimalist, vibrant) should be inspired by the Reference Image.
    - Place the text elements (title, price, old price) in positions inspired by the layout of the Reference Image. The font and text styling should also be similar in spirit to the reference.
    - Create a new, suitable background that complements the product and the inspired style.
    - Do NOT include any logos or brands from the reference image. The final output should be clean and professional.
    `;
    
    const response: GenerateContentResponse = await ai.models.generateContent({
        // FIX: Updated model name to 'gemini-2.5-flash-image-preview' as per guidelines for image editing tasks.
        model: 'gemini-2.5-flash-image-preview',
        contents: {
            parts: [
                fileToGenerativePart(referenceImage),
                fileToGenerativePart(productImage),
                { text: prompt },
            ],
        },
        config: {
            responseModalities: [Modality.IMAGE, Modality.TEXT],
        },
    });

    for (const part of response.candidates[0].content.parts) {
        if (part.inlineData) {
            return {
                base64: part.inlineData.data,
                mimeType: part.inlineData.mimeType,
            };
        }
    }

    throw new Error("No image was generated by the AI.");
};


export const refineGeneratedImage = async (
  baseImage: ImageFile,
  refineText: string,
  refineImage: ImageFile | null
): Promise<ImageFile> => {
    const prompt = `
    You are an expert AI graphic designer refining an existing image.

    **Primary Goal:** Your most important task is to render any text with 100% accuracy.

    **Text Rendering Rules (NON-NEGOTIABLE):**
    - If the instruction involves adding or changing text, you MUST render all characters with 100% accuracy.
    - Do NOT substitute, modify, or incorrectly draw any characters, especially non-Latin characters.

    **Task:** Modify the provided image based on the following instruction.
    
    ${refineImage ? `
    **Input Image 1:** The first image provided is the base image you need to edit.
    **Input Image 2:** The second image provided is a visual element to use in the modification (e.g., a logo to add).
    ` : `
    **Input Image:** The image provided is the one you need to edit.
    `}

    **Modification Instruction:** "${refineText}"

    **Instructions:**
    - Apply the change described in the modification instruction to the input image.
    - Preserve the rest of the image's quality and style as much as possible.
    - Output the modified image.
    `;

    // FIX: Explicitly typed the 'parts' array to allow a mix of image and text parts, resolving the TypeScript error on line 114.
    const parts: ({ inlineData: { data: string; mimeType: string; } } | { text: string })[] = [fileToGenerativePart(baseImage)];
    if (refineImage) {
        parts.push(fileToGenerativePart(refineImage));
    }
    parts.push({ text: prompt });

    const response: GenerateContentResponse = await ai.models.generateContent({
        // FIX: Updated model name to 'gemini-2.5-flash-image-preview' as per guidelines for image editing tasks.
        model: 'gemini-2.5-flash-image-preview',
        contents: {
            parts: parts,
        },
        config: {
            responseModalities: [Modality.IMAGE, Modality.TEXT],
        },
    });

    for (const part of response.candidates[0].content.parts) {
        if (part.inlineData) {
            return {
                base64: part.inlineData.data,
                mimeType: part.inlineData.mimeType,
            };
        }
    }

    throw new Error("No image was generated by the AI for refinement.");
};
